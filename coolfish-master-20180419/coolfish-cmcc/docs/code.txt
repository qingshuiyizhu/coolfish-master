<?xml version="1.0" encoding="GBK"?>
<operation_in>
	<process_code>cc_qryuserinfo</process_code>
	<app_id>109000000174</app_id>
	<access_token>gaW6ZgMpFDsi43FeZJiJ</access_token>
	<sign></sign>
	<verify_code></verify_code>
	<req_type>1</req_type>
	<terminal_id></terminal_id>
	<accept_seq></accept_seq>
	<req_time>20180301000000</req_time>
	<req_seq>sno</req_seq>
	<content>
		<msisdn>1440030670469</msisdn>
		<groupid>52330158013</groupid>
		<ddr_city>21</ddr_city>
	</content>
</operation_in>


<?xml version="1.0" encoding="GBK"?>
<operation_in>
  <process_code>OPEN_QRYINTERNETUSERGPRS</process_code>
  <app_id>109000000114</app_id>
  <access_token>IWyDm4ie9o12WEmLJYm0</access_token>
  <sign></sign>
  <verify_code></verify_code>
  <req_type>1</req_type>
  <terminal_id></terminal_id>
  <accept_seq></accept_seq>
  <req_seq>0_9834345</req_seq>
  <req_time>20180410174203</req_time>
  <content>
    <service_number>17892088908</service_number>
    <cycle>201704</cycle>
  </content>
</operation_in>

测试注解
/*@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest*/


// 使用POST方法发送XML数据
	public static String sendXMLDataByPost(String url, String xmlData) throws Exception {
	 	if (client == null) {
			client = HttpClients.createDefault();
		}
		HttpPost post = new HttpPost(url);
		post.addHeader("Content-Type","text/html;charset=UTF-8");
		List<BasicNameValuePair> parameters = new ArrayList<>();
		parameters.add(new BasicNameValuePair("xml", xmlData));
		post.setEntity(new UrlEncodedFormEntity(parameters, "UTF-8"));
		HttpResponse response = client.execute(post);
		System.out.println(response.toString());
		HttpEntity entity = response.getEntity();
		String result = EntityUtils.toString(entity, "UTF-8");
		return result;
	}
	
	
	  Gson gson = new GsonBuilder()//
                .setPrettyPrinting()//格式化输出（序列化）
              //  .setDateFormat("yyyy-MM-dd HH:mm:ss") //序列化日期格式化输出
                .create();
	    DKLLCXOperationOut json2 = gson.fromJson(json, DKLLCXOperationOut.class);
	    
	    
	       	
	  //创建JSON解析器
        JsonParser parser=new JsonParser();  
         //创建JsonObject对象  json文件  
        JsonObject object=(JsonObject) parser.parse(json);
        //将json数据转为为String型的数据
        System.out.println("resp_time="+object.get("resp_time").getAsString());
    //将json数据转为为boolean型的数据
     //   System.out.println("pop="+object.get("pop").getAsBoolean()); 
      //得到为json的数组
        JsonArray array=object.get("response").getAsJsonArray();    
        for(int i=0;i<array.size();i++){
            System.out.println("---------------");
            JsonObject subObject=array.get(i).getAsJsonObject();
            System.out.println("resp_type="+subObject.get("resp_type").getAsString());
            System.out.println("resp_desc="+subObject.get("resp_desc").getAsString());
            System.out.println("resp_code="+subObject.get("resp_code").getAsString());
        } 
        
        
        // private static final Logger logger =
	// LoggerFactory.getLogger(CMCCLiuLiangService.class);
 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	 	