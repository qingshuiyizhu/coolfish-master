server:
       port: 9090
       servlet-path: /
### 是否显示banner，可选值[true|false]
spring: 
       main: 
            banner-mode: CONSOLE 
       profiles: 
                 active: dev #环境配置
       
   # 数据库访问配置
    # 主数据源，默认的
       datasource: 
                  type: com.alibaba.druid.pool.DruidDataSource
                  url: jdbc:mysql://localhost:3306/colud_control_system?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
                  username: root
                  password: 123456
                  driverClassName: com.mysql.jdbc.Driver
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
                  initialSize: 5
                  minIdle: 5
                  maxActive: 20
                  maxWait: 60000  # 配置获取连接等待超时的时间
                  timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
                  minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
                  validationQuery: SELECT 1 FROM DUAL
                  testWhileIdle: true
                  testOnBorrow: false
                  testOnReturn: false
     # 打开PSCache，并且指定每个连接上PSCache的大小 
                  poolPreparedStatements: true
                  maxPoolPreparedStatementPerConnectionSize: 20
                  filters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
                  connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000   # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
                  useGlobalDataSourceStat: true   # 合并多个DruidDataSource的监控数据
 
    #JPA Configuration:  
       jpa: 
           database: MYSQL
    # Show or not log for each sql query
           show-sql: true
    #格式化sql
           properties: 
                      hibernate: 
                                format_sql: true
                                naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy 
                                dialect: org.hibernate.dialect.MySQL5Dialect  # 方言
    #实体类维护数据库表结构的具体行为：update/create/create-drop/validate/none
    #spring.jpa.hibernate.ddl-auto=create  

    ## 建表方式
           hibernate: 
                     ddl-auto: update
    #spring.jpa.properties.hibernate.hbm2ddl.auto=update 
    #spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect  
                    
                     #日志系统 slfj logback
logging: 
        config: classpath:logback.xml
        path: D:/spring-boot/logs
        

---
#开发环境的配置
coolfish: 
         cmcc: 
              url: http://221.178.251.182:80/internet_surfing
              appid: 109000000114
              token: IWyDm4ie9o12WEmLJYm0
              groupid: 51810008262
              password: ZJWKJ3
              ddrcity: 15
              appid2: G12UC2VW  
                
---
#测试环境的配置
coolfish: 
         cmcc: 
               url:  
               appid:  
               token:  
                
---
#生产环境的配置
coolfish: 
         cmcc: 
               url:  
               appid:  
               token: 











