# REDIS (RedisProperties)
# Redis 数据索引(默认为0)
spring.redis.database=1
# Redis服务器地址
spring.redis.host=114.55.132.207
#Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password = kuyucoolfish888
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000

#################redis线程池设置#################
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle=0
# 连接池最大连接数（使用负值表示没有限制）
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active=8
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=-1

#################redis哨兵设置#################
# Redis服务器master的名字
#spring.redis.sentinel.master=master8026
# redis-sentinel的配置地址和端口
#spring.redis.sentinel.nodes=10.189.80.25:26379,10.189.80.26:26379,10.189.80.27:26378


###############################数据库访问配置############################################
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://119.23.155.183:3307/test?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
#spring.datasource.username= admin2
#spring.datasource.password= admin2
spring.datasource.url=jdbc:mysql://rm-wz9q2m8jgt8kr63d8.mysql.rds.aliyuncs.com/coolfish?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.username= wapwei
spring.datasource.password= Wapwei123
 

spring.datasource.driverClassName = com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
 
    #JPA Configuration:  
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=true
#格式化sql
spring.jpa.properties.hibernate.format_sql=true
#实体类维护数据库表结构的具体行为：update/create/create-drop/validate/none
#spring.jpa.hibernate.ddl-auto=create  

## 建表方式
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.hbm2ddl.auto=update 
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect  
spring.jpa.properties.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  
# 方言
#spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#日志系统 slfj logback
logging.config=classpath:logback.xml
logging.path=D:/spring-boot/logs


